services:
  # Service
  service_name_fastapi:
    build:
      context: .
      dockerfile: Dockerfile
      target: fastapi_dev
    ports:
      - 8000:8000
    volumes:
      - ./:/app
    environment:
      - ENVIRONMENT=test
      - DB_URL=postgresql+asyncpg://user:password@postgres:5432/service_name
      - CACHE_TTL=5
    restart: always
    depends_on:
      - nats
      - postgres
      - redis
  integration_tests:
    build:
      context: .
      dockerfile: Dockerfile
      target: test
    volumes:
      - ./:/app
    environment:
      - LOG_LEVEL=ERROR
      - ENVIRONMENT=test
      - DB_URL=postgresql+asyncpg://user:password@postgres:5432/service_name
      - SERVER_URL=http://service_name_fastapi:8000
    depends_on:
      - service_name_fastapi

  # Infrastructure
  # Observability
  prometheus:
    image: prom/prometheus:lates
    restart: always
    volumes:
      - ./tools/prometheus:/etc/prometheus/
    ports:
      - 9090:9090
  grafana:
    image: grafana/grafana:latest
    restart: always
    ports:
      - 3000:3000
    depends_on:
      - prometheus

  # DB
  postgres:
    image: postgres:latest
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: service_name
      POSTGRES_PASSWORD: password
      POSTGRES_USER: user

  # Cache
  redis:
    image: redis:latest
    restart: always
    ports:
      - 6379:6379
  redis-commander:
    image: rediscommander/redis-commander:latest
    restart: always
    ports:
      - 6380:8081
    environment:
      - REDIS_HOSTS=local:redis:6379

  # Broker
  nats:
    image: nats:alpine
    restart: always
    command:
      - '--jetstream'
    ports:
      - 4222:4222
